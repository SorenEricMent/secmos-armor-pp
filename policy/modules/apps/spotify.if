## <summary>Spotify musicplayer</summary>

#######################################
## <summary>
## 	Role access for spotify
## </summary>
## <param name="role_prefix">
##	<summary>
##	The prefix of the user role (e.g., user
##	is the prefix for user_r).
##	</summary>
## </param>
## <param name="user_domain">
##	<summary>
##	User domain for the role.
##	</summary>
## </param>
## <param name="user_exec_domain">
##	<summary>
##	User exec domain for execute and transition access.
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	Role allowed access
##	</summary>
## </param>
#
template(`spotify_role',`
	gen_require(`
		type spotify_t;
		type spotify_env_t;
		type spotify_exec_t;
		type $1_wm_t;
		type $1_systemd_t;
		type $1_dbusd_t;
		attribute_role spotify_roles;
		class dbus send_msg;
	')

	roleattribute $4 spotify_roles;

	# Allow ps to show spotify processes and allow the user to signal it
	ps_process_pattern($3, spotify_t)
	
	wm_rw_tmpfs_files(spotify_t)
	
	allow spotify_t $1_wm_t:unix_stream_socket { connectto rw_socket_perms };	
	allow $1_t spotify_env_t:dir { search_dir_perms read };
	allow $1_systemd_t spotify_env_t:dir { search_dir_perms read };
	allow $1_wm_t spotify_env_t:dir { search_dir_perms read };
	allow $1_t spotify_env_t:file { read_file_perms map };
        allow $1_wm_t spotify_env_t:file { read_file_perms map };

	allow $2 spotify_exec_t:lnk_file { manage_lnk_file_perms relabel_lnk_file_perms };
	
	allow $1_wm_t spotify_t:process { noatsecure siginh rlimitinh };

	allow spotify_t $1_dbusd_t:unix_stream_socket connectto;
	allow $1_systemd_t spotify_exec_t:file execute;

	allow $1_t spotify_t:fd use;
	allow $1_wm_t spotify_t:fd use;
	
	optional_policy(`
		systemd_user_app_status($1, spotify_t)
	')
')

########################################
## <summary>
##      Execute spotify_exec_t in the spotify domain.
## </summary>
## <param name="domain">
## <summary>
##      Domain allowed to transition.
## </summary>
## </param>
#
interface(`spotify_domtrans',`
        gen_require(`
                type spotify_t, spotify_exec_t;
        ')

        corecmd_search_bin($1)
        domtrans_pattern($1, spotify_exec_t, spotify_t)
')

########################################
## <summary>
##	Execute the spotify in the caller domain.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`spotify_exec',`
	gen_require(`
		type spotify_exec_t;
	')

	corecmd_search_bin($1)
	can_exec($1, spotify_exec_t)
')

########################################
## <summary>
##	Execute spotify in a specified domain.
## </summary>
## <desc>
##	<p>
##	Execute spotify in a specified domain.
##	</p>
##	<p>
##	No interprocess communication (signals, pipes,
##	etc.) is provided by this interface since
##	the domains are not owned by this module.
##	</p>
## </desc>
## <param name="source_domain">
##	<summary>
##	Domain allowed to transition.
##	</summary>
## </param>
## <param name="target_domain">
##	<summary>
##	Domain to transition to.
##	</summary>
## </param>
#
interface(`spotify_spec_domtrans',`
	gen_require(`
		type spotify_exec_t;
	')

	corecmd_search_bin($1)
	domain_auto_transition_pattern($1, spotify_exec_t, $2)
')

